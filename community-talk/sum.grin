grinMain =
    t1 <- store (CInt 1)
    t2 <- store (CInt 100000)
    t3 <- store (Fupto t1 t2)
    t4 <- store (Fsum t3)
    (CInt r') <- eval t4
    _prim_int_print r'

upto m n =
    (CInt m') <- eval m
    (CInt n') <- eval n
    b' <- _prim_int_gt m' n'
    if b' then
        pure (CNil)
    else
        m1' <- _prim_int_add m' 1
        m1 <- store (CInt m1')
        p <- store (Fupto m1 n)
        pure (CCons m p)

sum l =
    l2 <- eval l
    case l2 of
        (CNil)       -> pure (CInt 0)
        (CCons x xs) ->
            (CInt x') <- eval x
            (CInt s') <- sum xs
            ax' <- _prim_int_add x' s'
            pure (CInt ax')

eval q =
    v <- fetch q
    case v of
        (CInt x'1)    -> pure (CInt x'1)
        (CNil)        -> pure (CNil)
        (CCons y ys)  -> pure (CCons y ys)
        (Fupto a b) ->
            w <- upto a b
            update q w
            pure w
        (Fsum c) ->
            z <- sum c
            update q z
            pure z
